{"version":3,"sources":["CalculateTime.js","glass-clink-1.mp3","bell-ring.mp3","App.js","index.js"],"names":["calculateTime","seconds","hours","Math","floor","minutes","Timer","useState","setSeconds","isActive","setIsActive","timeArray","setTimeArray","stateRef","useRef","useSound","bell","volume","playBell","glassClink","play","useEffect","interval","setInterval","current","clearInterval","className","onClick","ceil","toFixed","style","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAgBiBA,MAhBjB,SAAwBC,GACpB,IAAIC,EAAQC,KAAKC,MAAMH,EAAU,MAC7BI,EAAUF,KAAKC,OAAOH,EAAmB,KAARC,GAAkB,IAOvD,OANAD,EAAUA,EAAmB,KAARC,EAA2B,GAAVG,EAMhC,CAJYH,EAAQ,GAAR,WAAiBA,GAASA,EACxBG,EAAU,GAAV,WAAmBA,GAAWA,EAC9BJ,EAAU,GAAV,WAAmBA,GAAYA,ICPxC,MAA0B,0CCA1B,MAA0B,sCC8H1BK,EAtHD,WAAO,IAAD,EAEYC,mBAAS,MAFrB,mBAEXN,EAFW,KAEFO,EAFE,OAGcD,oBAAS,GAHvB,mBAGXE,EAHW,KAGDC,EAHC,OAIgBH,mBAAS,IAJzB,mBAIXI,EAJW,KAIAC,EAJA,KAKZC,EAAWC,iBAAO,MALN,EAMCC,YAASC,EAAM,CAAEC,OAAQ,KAArCC,EANW,sBAOHH,YAASI,EAAY,CAAEF,OAAQ,KAAvCG,EAPW,oBA6EjB,OAnEAC,qBAAU,WACT,IAAIV,EAAYX,EAAcC,GAC9BW,EAAaD,KACV,CAACV,IAaNoB,qBAAU,WACLpB,EAAU,GAAKQ,GACjBW,MAEA,CAACX,IAOJY,qBAAU,WACR,IAAIC,EAAW,KAWf,OAVKb,EACHa,EAAWC,aAAY,WACrBf,GAAW,SAAAP,GAAO,OAAIA,EAAU,KAChB,IAAZA,GACFO,EAAWK,EAASW,WAErB,KACOf,GAAwB,IAAZR,GACtBwB,cAAcH,GAET,kBAAMG,cAAcH,MAC1B,CAACb,EAAUR,IAGdoB,qBAAU,WACK,IAAVpB,GAAeQ,GACjBS,MAEA,CAACT,EAAUR,IAqBZ,qBAAKyB,UAAU,MAAf,SAEG,sBAAKA,UAAU,UAAf,UAEG,+CAEA,sBAAKA,UAAU,UAAf,UACI,wBAAQA,UAAU,gBAAgBC,QAlB9C,WACM1B,EAAU,IAAMA,GAAW,MAAQY,EAASW,QAAU,KACxDhB,GAAW,SAAAP,GAAO,OAAIE,KAAKC,MAAMH,EAAU,GAAMA,EAAU,OAC3DY,EAASW,QAAUrB,KAAKC,MAAMH,EAAU,GAAMA,EAAU,KAE1DE,KAAKyB,MAAMf,EAASW,QAAU,IAAIK,QAAQ,KAahC,iBACK,qBAAKH,UAAS,uBAAkBjB,EAAW,SAAS,YAApD,uBACL,wBAAQiB,UAAU,gBAAgBC,QA5B9C,WACM1B,EAAU,OACZO,GAAW,SAAAP,GAAO,OAAIE,KAAKyB,KAAM3B,EAAU,GAAOA,EAAU,OAC5DY,EAASW,QAAUrB,KAAKyB,KAAM3B,EAAU,GAAOA,EAAU,KAE3DE,KAAKC,OAAQS,EAASW,QAAU,IAAIK,QAAQ,KAuBlC,iBAEA,sBAAKC,MAAQ,CAAEC,OAAQ,QAAvB,cACE5B,KAAKC,OAAQS,EAASW,QAAU,IAAIK,QAAQ,IAD9C,UAKJ,0BAASH,UAAS,eAAUjB,EAAW,SAAS,YAAhD,UACM,kCAAKE,EAAU,GAAf,OACA,qCACA,4BAAIA,EAAU,QAGpB,sBAAKe,UAAU,MAAf,UAEE,wBAAQA,UAAS,+CAA0CjB,EAAW,SAAW,YAAckB,QAAS,WAtFhHjB,GAAaD,GAiBTA,GAAUW,KAqEN,SACKX,EAAW,QAAU,UAG1B,wBAAQiB,UAAU,eAAeC,QAvF3C,WACEjB,GAAY,GACZF,EAAW,MACXK,EAASW,QAAU,KACnBrB,KAAKC,OAASH,EAAU,IAAI4B,QAAQ,KAmF5B,4BC9GZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aab48d45.chunk.js","sourcesContent":["function calculateTime (seconds) {\r\n    let hours = Math.floor(seconds / 3600);\r\n    let minutes = Math.floor((seconds - (hours * 3600 )) / 60 );\r\n    seconds = seconds - (hours * 3600) - (minutes * 60 );\r\n\r\n    let hoursFormat = hours < 10 ? `0${hours}`: hours;\r\n    let minutesFormat = minutes < 10 ? `0${minutes}`: minutes;\r\n    let secondsFormat = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n    return[\r\n      hoursFormat, \r\n      minutesFormat,\r\n      secondsFormat\r\n    ]\r\n  }\r\n\r\n  export default calculateTime;","export default __webpack_public_path__ + \"static/media/glass-clink-1.9caa9177.mp3\";","export default __webpack_public_path__ + \"static/media/bell-ring.57d5e004.mp3\";","// src=\"https://www.soundjay.com/misc/sounds/bell-ringing-05.mp3\"\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport useSound from 'use-sound';\nimport calculateTime from './CalculateTime';\nimport glassClink from './glass-clink-1.mp3';\nimport bell from './bell-ring.mp3';\n\nconst Timer = () => {\n\n  const [seconds, setSeconds] = useState(30*60);\n  const [isActive, setIsActive] = useState(false);\n  const [timeArray, setTimeArray] = useState([]);\n  const stateRef = useRef(30*60);\n  const [playBell] = useSound(bell, { volume: 0.2 });\n  const [play] = useSound(glassClink, { volume: 0.1 });\n\n\n   useEffect(() => {\n    let timeArray = calculateTime(seconds);\n    setTimeArray(timeArray);\n    }, [seconds]);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }; \n\n  function resetSession() {\n    setIsActive(false);\n    setSeconds(30*60);\n    stateRef.current = 1800;    \n    Math.floor (( seconds / 60).toFixed(0));\n  };\n\n  useEffect(() => {\n    if(seconds > 1 && isActive) {\n     play();\n    }    \n  }, [isActive]);\n\n  function dink () {\n    if(!isActive) play() \n  };\n\n   \n  useEffect(() => {\n    let interval = null;\n    if ( isActive ) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n        if (seconds === 0) {\n          setSeconds(stateRef.current)\n        }\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n\n  useEffect(()=> {\n    if(seconds===1 && isActive) {\n     playBell();\n    }\n  }, [isActive, seconds]);\n\n  function plusMinutes () {\n    if (seconds < 3540) {\n      setSeconds(seconds => Math.ceil((seconds + 60) - (seconds % 60)));\n      stateRef.current = Math.ceil((seconds + 60) - (seconds % 60));\n    }\n    Math.floor ((stateRef.current / 60).toFixed(0));\n  }\n\n  function minusMinutes () {\n    if (seconds > 60 && seconds <= 3540 && stateRef.current > 60 ) {\n      setSeconds(seconds => Math.floor(seconds - 60 - (seconds % 60)));\n      stateRef.current = Math.floor(seconds - 60 - (seconds % 60));\n    }\n    Math.ceil((stateRef.current / 60).toFixed(0));\n  }\n\n\n \n   return (\n    <div className=\"app\">   \n\n       <div className='wrapper'>      \n\n          <h2> cycle timer </h2>\n\n          <div className='session'> \n              <button className='changeMinutes' onClick={minusMinutes}> - </button>\n                   <div className={`session-sign-${isActive ? 'active':'inactive'}`}> session </div>\n              <button className='changeMinutes' onClick={plusMinutes}> + </button>  \n\n              <div style= {{ margin: '-2vh'}} > {                              \n                Math.floor ((stateRef.current / 60).toFixed(0))\n              } </div>                \n          </div>          \n\n          <section className={`time-${isActive ? 'active':'inactive'}`}>\n                <p> {timeArray[1]} </p>\n                <span>:</span>\n                <p>{timeArray[2]}</p>\n          </section>  \n                  \n          <div className='row'>\n\n            <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={()=>{ toggle();  dink(); } }>\n                {isActive ? 'PAUSE' : 'START'}\n            </button>\n\n            <button className='button-reset' onClick={resetSession} >\n                RESET\n            </button>\n\n          </div>\n       </div>\n\n    </div>\n  );\n};\n\n\nexport default Timer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}